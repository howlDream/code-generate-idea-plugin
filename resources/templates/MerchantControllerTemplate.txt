package ${path};

import cn.hutool.core.bean.BeanUtil;
import com.alibaba.fastjson.JSONArray;
import com.github.pagehelper.PageInfo;
import ${entityPath}.${module};
import ${servicePath}.${module}Service;
import ${interfacePath}.${module}MerchantInterface;
import ${modelPath}.${module}ListModel;
import ${modelPath}.${module}Model;
import ${requestPath}.${module}GetRequest;
import ${requestPath}.${module}ListRequest;
import com.planck.corona.common.response.BaseResultResponse;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

@RestController
@Slf4j
public class ${module}Controller implements ${module}Interface {

    @Autowired
    private ${module}Service ${moduleLittle}Service;


    @Override
    public BaseResultResponse<String> save (@RequestBody @Valid ${module}Model ${moduleLittle}Model) {
        BaseResultResponse<String> response = new BaseResultResponse<>();
        ${module} entity = new ${module}();
        BeanUtil.copyProperties(${moduleLittle}Model,entity);
        ${moduleLittle}Service.save${module}(entity);
        return response;
    }

    @Override
    public BaseResultResponse<${module}Model> get (@RequestBody @Valid ${module}GetRequest request) {
        BaseResultResponse<${module}Model> resultResponse = new BaseResultResponse<>();
        ${module} ${moduleLittle} = ${moduleLittle}Service.get(request.getId());
        if (${moduleLittle} == null) {
            resultResponse.resetError("-1","数据不存在！");
            return resultResponse;
        }
        ${module}Model ${moduleLittle}Model = new ${module}Model();
        BeanUtil.copyProperties(${moduleLittle},${moduleLittle}Model);
        resultResponse.setData(${moduleLittle}Model);
        return resultResponse;
    }

    @Override
    public BaseResultResponse<PageInfo<${module}ListModel>> pageList(@RequestBody ${module}ListRequest request) {
        BaseResultResponse<PageInfo<${module}ListModel>> response = new BaseResultResponse<>();
        PageInfo<${module}ListModel> pageInfo = ${moduleLittle}Service.getList(request);
        response.setDatas(pageInfo);
        return response;
    }

    @Override
    public BaseResultResponse<String> delete(@RequestBody ${module}GetRequest request) {
        BaseResultResponse<String> response = new BaseResultResponse<>();
        ${module} ${moduleLittle} = ${moduleLittle}Service.get(request.getId());
        if (${moduleLittle} == null) {
            response.resetError("-1","数据不存在！");
            return response;
        }
        ${module} updateEntity = new ${module}();
        updateEntity.setId(${moduleLittle}.getId());
        updateEntity.setDeleted((byte)1);
        ${moduleLittle}Service.save${module}(updateEntity);
        return response;
    }



}
